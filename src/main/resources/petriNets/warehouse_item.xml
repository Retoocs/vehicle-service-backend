<?xml version="1.0" encoding="UTF-8"?>
<document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://netgrif.github.io/petriflow/petriflow.schema.xsd">
	<id>warehouse_item</id>
	<initials>WI</initials>
	<title name="case_title">Warehouse item</title>
	<icon>device_hub</icon>
	<defaultRole>true</defaultRole>
	<transitionRole>false</transitionRole>
	<caseName name="default_case_name">Warehouse item</caseName>
	<caseEvents>
        <event type="delete">
            <id>case_delete</id>
            <actions phase="pre">
                <action>
					OENumber: f.OENumber,
					warehouse: f.warehouse_enum;

					def x = findCase({it._id.eq(warehouse.value)})
					if(x == null)
						return

					x.dataSet.get("items").choices = x.dataSet.get("items").choices - useCase.stringId
					x.dataSet.get("OENumbers").choices = x.dataSet.get("OENumbers").choices - OENumber.value
					workflowService.save(x)
                </action>
            </actions>
        </event>
    </caseEvents>
	<!-- TRANSACTIONS -->
	<!-- ROLES -->
	<!-- PROCESS ROLE REFS -->
	<!-- PROCESS USER REFS -->
	<!-- DATA -->
	<data type="text">
		<id>OENumber</id>
		<title name="OENumber">(OE) Original Equipment number</title>
	</data>
	<data type="text">
		<id>manufacturer</id>
		<title name="manufacturer">Manufacturer</title>
	</data>
	<data type="text">
		<id>warehouseId</id>
		<title name="warehouseId">Warehouse id</title>
		<action trigger="set">
			warehouseId: f.warehouseId,
			warehouse_enum: f.warehouse_enum,
			is_event_from_warehouseId: f.is_event_from_warehouseId;

			if(warehouseId.value == null)
				return

			change warehouse_enum value { warehouseId.value }
			change is_event_from_warehouseId value { true }
		</action>
	</data>
	<data type="enumeration_map">
		<id>warehouse_enum</id>
		<title name="warehouse_enum">In warehouse</title>
		<action trigger="get">
			warehouse_enum: f.warehouse_enum;

			def warehouses = findCases( {it.processIdentifier.eq("warehouse")} )
			if(warehouses == null || warehouses == []){
				change warehouse_enum options { [:] }
				return
			}

			def newOptions = warehouses.collectEntries{ [(it.stringId): it.getFieldValue("warehouse_name")] }
			change warehouse_enum options { newOptions }
		</action>
		<action trigger="set">
			OENumber: f.OENumber,
			is_event_from_warehouseId: f.is_event_from_warehouseId,
			warehouseId: f.warehouseId,
			warehouse_enum: f.warehouse_enum;

			if(!is_event_from_warehouseId.value){
				if(warehouseId.value == warehouse_enum.value)
					return

				if(warehouseId.value != null){
					def oldWarehouse = findCase( {it._id.eq(warehouseId.value)} )
					oldWarehouse?.dataSet.get("items").choices = oldWarehouse?.dataSet.get("items").choices - useCase.stringId
					oldWarehouse?.dataSet.get("OENumbers").choices = oldWarehouse?.dataSet.get("OENumbers").choices - OENumber.value
					workflowService.save(oldWarehouse)
				}

				change warehouseId value { warehouse_enum.value }

				def newWarehouse = findCase( {it._id.eq(warehouse_enum.value)} )
				newWarehouse.dataSet.get("items").choices = newWarehouse.dataSet.get("items").choices + [useCase.stringId]
				newWarehouse.dataSet.get("OENumbers").choices = newWarehouse.dataSet.get("OENumbers").choices + [OENumber.value]
				workflowService.save(newWarehouse)
			}
			else { change is_event_from_warehouseId value { false } }
		</action>
	</data>
	<data type="text">
		<id>title</id>
		<title name="title">title</title>
	</data>
	<data type="boolean">
		<id>is_event_from_warehouseId</id>
		<title>is_event_from_warehouseId</title>
		<init>false</init>
	</data>
	<data type="boolean">
		<id>is_from_warehouse</id>
		<title>is_from_warehouse</title>
		<init>false</init>
	</data>
	<data type="text">
		<id>description</id>
		<title name="description">Description</title>
		<values>area</values>
	</data>
	<data type="number">
		<id>nonVatPrice</id>
		<title name="nonVatPrice">Non-VAT price</title>
		<init>0</init>
		<action trigger="set">
			tax: f.tax,
			vatPrice: f.vatPrice,
			nonVatPrice: f.nonVatPrice;

			if (nonVatPrice.value) {
				if (nonVatPrice.value &lt; 0) {
					change nonVatPrice value { return 0; }
					return;
				}
				def val = nonVatPrice.value + (nonVatPrice.value * (tax.value/100)).round(2);
				if (!vatPrice.value) {
					change vatPrice value { return val; }
				} else if (vatPrice.value != val) {
					change vatPrice value { return val; }
				}
			}
		</action>
	</data>
	<data type="number">
		<id>vatPrice</id>
		<title name="vatPrice">VAT price</title>
		<init>0</init>
		<action trigger="set">
			tax: f.tax,
			vatPrice: f.vatPrice,
			nonVatPrice: f.nonVatPrice;

			if (vatPrice.value) {
				if (vatPrice.value &lt; 0) {
					change vatPrice value { return 0; }
					return;
				}
				def val = (vatPrice.value / (tax.value/100 + 1)).round(2);
				if (!nonVatPrice.value) {
					change nonVatPrice value { return val; }
				} else if (nonVatPrice.value != val) {
					change nonVatPrice value { return val; } 
				}
			}
		</action>
	</data>
	<data type="number">
		<id>quantity</id>
		<title name="quantity">Quantity</title>
		<validations>
			<validation>
				<expression>inrange 0,9999999999999</expression>
				<message name="quantity_valid1">Must be greater or even than 0</message>
			</validation>
		</validations>
		<init>1</init>
	</data>
	<data type="number">
		<id>quantity_transfer_to_repair</id>
		<title name="quantity_transfer_to_repair">Quantity to transfer</title>
		<validations>
			<validation>
				<expression>inrange 1,9999999999999</expression>
				<message name="quantity_transfer_to_repair_valid1">Must be greater or even than 1</message>
			</validation>
		</validations>
		<init>1</init>
	</data>
	<data type="enumeration_map">
		<id>unit</id>
		<title name="unit">Unit</title>
		<options>
		    <option key="kg" name="unit_kg">kg (Kilogram)</option>
			<option key="pcs" name="unit_pcs">pcs (Pieces)</option>
			<option key="l" name="unit_l">l (Litres)</option>
		</options>
		<init>pcs</init>
	</data>
	<data type="enumeration_map">
		<id>status</id>
		<title name="status">Status</title>
		<options>
			<option key="created" name="status_created">Created</option>
		</options>
		<view>
			<autocomplete/>
		</view>
	</data>
	<data type="file">
		<id>image</id>
		<title name="image">Image</title>
		<component>
			<name>preview</name>
		</component>
	</data>
	<data type="number">
		<id>tax</id>
		<title name="tax">Tax (in %)</title>
		<init>20</init>
		<action trigger="set">
			tax: f.tax,
			vatPrice: f.vatPrice,
			nonVatPrice: f.nonVatPrice;

			if (tax.value) {
				if(tax.value &lt;= 0) {
					change tax value { return 0; }
				} 
				if (nonVatPrice.value &amp;&amp; !vatPrice.value) {
					change vatPrice value { return (nonVatPrice.value + (nonVatPrice.value * (tax.value/100))).round(2); }
				} else if (!nonVatPrice.value &amp;&amp; vatPrice.value) {
					change nonVatPrice value { return (vatPrice.value / (tax.value/100 + 1)); }
				} else if (nonVatPrice.value &amp;&amp; vatPrice.value) {
					change vatPrice value { return (nonVatPrice.value + (nonVatPrice.value * (tax.value/100))).round(2); }
				}
			}
		</action>
	</data>
	<data type="taskRef">
		<id>input_form</id>
		<title></title>
		<init>t_input_form</init>
	</data>
	<data type="text">
		<id>short_description</id>
		<title name="short_description">Description</title>
		<view> <htmlEditor/> </view>
	</data>
	<data type="button">
		<id>remove_from_warehouse_1</id>
		<title/>
		<placeholder name="remove_from_warehouse_1">Remove</placeholder>
	</data>
	<data type="button">
		<id>remove_from_warehouse_2</id>
		<title/>
		<placeholder name="remove_from_warehouse_2">Approve removal</placeholder>
	</data>
	<data type="button">
		<id>remove_from_warehouse_3</id>
		<title></title>
		<placeholder name="remove_from_warehouse_3">Successfully removed</placeholder>
	</data>
	<!-- I18NS -->
	<i18n locale="sk">
		<i18nString name="t_create">Vytvoriť</i18nString>
		<i18nString name="t_read">Prečítať</i18nString>
		<i18nString name="t_update">Aktualizovať</i18nString>
		<i18nString name="t_delete">Vymazať</i18nString>
		<i18nString name="t_input_form">Vstupný formulár</i18nString>
		<i18nString name="default_case_name">Skladová položka</i18nString>
		<i18nString name="case_title">Skladová položka</i18nString>
		<i18nString name="OENumber">(OE) Original Equipment číslo</i18nString>
		<i18nString name="manufacturer">Výrobca</i18nString>
		<i18nString name="warehouseId">Sklad id</i18nString>
		<i18nString name="warehouse_enum">V sklade</i18nString>
		<i18nString name="description">Popis</i18nString>
		<i18nString name="nonVatPrice">Cena bez dane</i18nString>
		<i18nString name="vatPrice">Cena s daňou</i18nString>
		<i18nString name="quantity">Kvantita</i18nString>
		<i18nString name="quantity_valid1">Musi byť väčšie alebo rovné ako 0</i18nString>
		<i18nString name="quantity_transfer_to_repair">Presúvaná kvantita</i18nString>
		<i18nString name="quantity_transfer_to_repair_valid1">Musi byť väčšie alebo rovné ako 1</i18nString>
		<i18nString name="unit">Jednotka kvantity</i18nString>
		<i18nString name="unit_kg">kg (Kilogram)</i18nString>
		<i18nString name="unit_pcs">ks (Kusy)</i18nString>
		<i18nString name="unit_l">l (Litre)</i18nString>
		<i18nString name="status">Stav</i18nString>
		<i18nString name="status_created">Vytvorené</i18nString>
		<i18nString name="tax">DPH v %</i18nString>	
		<i18nString name="image">Fotka</i18nString>
		<i18nString name="title">Nadpis</i18nString>
		<i18nString name="short_description">Popis</i18nString>
		<i18nString name="remove_from_warehouse_1">Vymazať</i18nString>
		<i18nString name="remove_from_warehouse_2">Potvrdiť vymazanie</i18nString>
		<i18nString name="remove_from_warehouse_3">Vymazané</i18nString>
	</i18n>
    <i18n locale="de">
        <i18nString name="t_create">Schaffen</i18nString>
		<i18nString name="t_read">Lesen</i18nString>
		<i18nString name="t_update">Aktualisieren</i18nString>
		<i18nString name="t_delete">Löschen</i18nString>
		<i18nString name="t_input_form">Eintragsformular</i18nString>
		<i18nString name="default_case_name">Lagerartikel</i18nString>
		<i18nString name="case_title">Lagerartikel</i18nString>
		<i18nString name="OENumber">(OE) Original Equipment Nummer</i18nString>
		<i18nString name="manufacturer">Hersteller</i18nString>
		<i18nString name="warehouseId">Lager-ID</i18nString>
		<i18nString name="warehouse_enum">Im Lager</i18nString>
		<i18nString name="description">Beschreibung</i18nString>
		<i18nString name="nonVatPrice">Preis ohne Steuern</i18nString>
		<i18nString name="vatPrice">Preis mit MwSt.</i18nString>
		<i18nString name="quantity">Menge</i18nString>
		<i18nString name="quantity_valid1">Must sein 0+</i18nString>
		<i18nString name="quantity_transfer_to_repair">übertragene Menge</i18nString>
		<i18nString name="quantity_transfer_to_repair_valid1">Must sein 1+</i18nString>
		<i18nString name="unit">Mengeneinheit</i18nString>
		<i18nString name="unit_kg">kg (Kilogramm)</i18nString>
		<i18nString name="unit_pcs">stk (Stücke)</i18nString>
		<i18nString name="unit_l">l (Liter)</i18nString>
		<i18nString name="status">Zustand</i18nString>
		<i18nString name="status_created">Erstellt</i18nString>
		<i18nString name="tax">MwSt. in %</i18nString>	
		<i18nString name="image">Foto</i18nString>
		<i18nString name="title">Titel</i18nString>
		<i18nString name="short_description">Beschreibung</i18nString>
		<i18nString name="remove_from_warehouse_1">Löschen</i18nString>
		<i18nString name="remove_from_warehouse_2">Löschung bestätigen</i18nString>
		<i18nString name="remove_from_warehouse_3">Gelöscht</i18nString>
	</i18n>
	<!-- TRANSITIONS -->
	<transition>
		<id>t_create</id>
		<x>620</x>
		<y>380</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label name="t_create">Create</label>
		<dataGroup>
			<id>DataGroup</id>
			<dataRef>
				<id>input_form</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
			</dataRef>
		</dataGroup>
		<event type="finish">
			<id>t_create_finish</id>
			<actions phase="post">
				<action>
					title: f.title,
					OENumber: f.OENumber,
					status: f.status;

					change status value { return "created"; }

					changeCaseProperty "title" about {
						return OENumber.value + " - " + title.value;
					}
				</action>
				<action>
					trans: t.t_input_form,
					warehouse_enum: f.warehouse_enum,
					status: f.status;

					change status value { return "created"; }
					make warehouse_enum,editable on trans when { true }
					make warehouse_enum,required on trans when { true }
				</action>
			</actions>
		</event>
		<event type="cancel">
			<id>t_create_cancel</id>
			<actions phase="post">
				<action>
					async.run{
						workflowService.deleteCase(useCase.stringId)
					}
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>t_delete</id>
		<x>780</x>
		<y>380</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label name="t_delete">Delete</label>
		<event type="finish">
			<id>t_delete_finish</id>
			<actions phase="post">
				<action>
					async.run{
						workflowService.deleteCase(useCase.stringId);
					}	
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>t_update</id>
		<x>700</x>
		<y>260</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label name="t_update">Update</label>
		<dataGroup>
			<id>DataGroup</id>
			<dataRef>
				<id>input_form</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
			</dataRef>
		</dataGroup>
		<event type="finish">
			<id>t_update_finish</id>
			<actions phase="post">
				<action>
					title: f.title,
					OENumber: f.OENumber;

					changeCaseProperty "title" about {
						return OENumber.value + " - " + title.value;
					}
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>t_read</id>
		<x>700</x>
		<y>500</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label name="t_read">Read</label>
		<dataGroup>
			<id>DataGroup1</id>
			<dataRef>
				<id>input_form</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
			</dataRef>
		</dataGroup>
		<dataGroup>
			<id>DataGroup2</id>
			<stretch>true</stretch>
			<dataRef>
				<id>status</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
			</dataRef>
		</dataGroup>
		<event type="cancel">
			<title></title>
		</event>
		<event type="assign">
			<title></title>
		</event>
		<event type="finish">
			<title></title>
		</event>
		<event type="delegate">
			<title></title>
		</event>
	</transition>
	<transition>
		<id>t_input_form</id>
		<x>540</x>
		<y>260</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label name="t_input_form">Input form</label>
		<dataGroup>
			<id>DataGroup</id>
			<layout>grid</layout>
			<dataRef>
				<id>OENumber</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>manufacturer</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>title</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>description</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>2</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>nonVatPrice</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>3</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>vatPrice</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>3</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>tax</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>4</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>image</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>4</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>quantity</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>5</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>unit</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>5</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>warehouse_enum</id>
				<logic>
					<behavior>editable</behavior>
					<action trigger="get">
						trans: t.t_input_form,
						is_from_warehouse: f.is_from_warehouse,
						warehouse_enum: f.warehouse_enum;

						if(is_from_warehouse.value){
							change is_from_warehouse value { false }
							make warehouse_enum,visible on trans when { true }
						}
						else {
							make warehouse_enum,editable on trans when { true }
							make warehouse_enum,required on trans when { true }
						}
					</action>
				</logic>
				<layout>
					<x>0</x>
					<y>6</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
	</transition>
	<transition>
		<id>t_short_description</id>
		<x>860</x>
		<y>260</y>
		<layout>
			<cols>5</cols>
			<offset>0</offset>
		</layout>
		<label>t_short_description</label>
		<dataGroup>
			<id>dg0</id>
			<layout>grid</layout>
			<dataRef>
				<id>OENumber</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>manufacturer</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>title</id>
				<logic>
					<behavior>visible</behavior>
					<action trigger="get">
						remove1: f.remove_from_warehouse_1,
						remove2: f.remove_from_warehouse_2,
						thisTask: t.t_short_description;

						make remove1,editable on thisTask when { true }
						make remove2,hidden on thisTask when { true }
					</action>
				</logic>
				<layout>
					<x>2</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>quantity</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>3</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>remove_from_warehouse_1</id>
				<logic>
					<behavior>editable</behavior>
					<action trigger="set">
						remove1: f.remove_from_warehouse_1,
						remove2: f.remove_from_warehouse_2,
						thisTask: t.t_short_description;

						make remove1,hidden on thisTask when { true }
						make remove2,editable on thisTask when { true }
					</action>
				</logic>
				<layout>
					<x>4</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>remove_from_warehouse_2</id>
				<logic>
					<behavior>hidden</behavior>
					<action trigger="set">
						remove1: f.remove_from_warehouse_2,
						remove2: f.remove_from_warehouse_3,
						quantity: f.quantity,
						thisTask: t.t_short_description;

						make remove1,hidden on thisTask when { true }
						make quantity,visible on thisTask when { true }
						make remove2,visible on thisTask when { true }

						async.run{ workflowService.deleteCase(useCase.stringId) }
					</action>
				</logic>
				<layout>
					<x>4</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance></appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>remove_from_warehouse_3</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>4</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance></appearance>
				</layout>
			</dataRef>
		</dataGroup>
	</transition>
	<transition>
		<id>t_repair_short_description</id>
		<x>1060</x>
		<y>260</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>t_repair_short_description</label>
		<dataGroup>
			<id>dg0</id>
			<layout>grid</layout>
			<dataRef>
				<id>OENumber</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>manufacturer</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>title</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>quantity_transfer_to_repair</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>3</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
	</transition>
	<!-- PLACES -->
	<place>
		<id>p1</id>
		<x>500</x>
		<y>380</y>
		<label></label>
		<tokens>1</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p2</id>
		<x>700</x>
		<y>380</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p3</id>
		<x>900</x>
		<y>380</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<!-- ARCS -->
	<arc>
		<id>a1</id>
		<type>regular</type>
		<sourceId>p1</sourceId>
		<destinationId>t_create</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a2</id>
		<type>regular</type>
		<sourceId>t_create</sourceId>
		<destinationId>p2</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a3</id>
		<type>regular</type>
		<sourceId>p2</sourceId>
		<destinationId>t_delete</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a4</id>
		<type>regular</type>
		<sourceId>t_delete</sourceId>
		<destinationId>p3</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a6</id>
		<type>read</type>
		<sourceId>p2</sourceId>
		<destinationId>t_read</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a7</id>
		<type>regular</type>
		<sourceId>p2</sourceId>
		<destinationId>t_update</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a8</id>
		<type>regular</type>
		<sourceId>t_update</sourceId>
		<destinationId>p2</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
</document>
