<event type="assign">
	<id>0</id>
	<actions phase="pre">
		<!--				vehicles initialization-->
		<action>
			vehicles: f.vehicles;

			def vehicle_cases = findCases( { it.processIdentifier.eq("vehicle").and(it.dataSet.get("status").value.eq("assigned")) } )

			if(vehicle_cases == null || vehicle_cases == [])
			return

			change vehicles options { [] }
			change vehicles value { "" }

			for(vehicle in vehicle_cases){
			def val = vehicle.dataSet.get("licenceNumber").value + " - " + vehicle.dataSet.get("manufacturer").value + " " + vehicle.dataSet.get("model").value
			change vehicles options { vehicles.options + [(vehicle.stringId): val] }
			}
		</action>
		<!--				customers initialization-->
		<action>
			customers: f.customers;

			def customers_cases = findCases( { it.processIdentifier.eq("customer") } )
			if(customers_cases == null || customers_cases == [])
			return

			change customers options { [] }
			change customers value { "" }

			for(customer in customers_cases){
			def val
			if(!customer.getFieldValue("natural_legal_person")){
			val = customer.dataSet.get("surname").value + " " + customer.dataSet.get("name").value + "; " + customer.dataSet.get("city").value + ", " + customer.dataSet.get("street").value
			}
			else {
			val = customer.dataSet.get("company_name").value + ", " + customer.dataSet.get("businessID").value
			}
			change customers options { customers.options + [(customer.stringId): val] }
			}
		</action>
	</actions>
</event>
